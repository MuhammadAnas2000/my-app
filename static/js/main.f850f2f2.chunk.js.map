{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","onClick","togglemode","htmlFor","TextForm","useState","text","setText","style","color","heading","onChange","event","target","value","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","charAt","i","length","split","Alert","word","alert","role","slice","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f850f2f2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import {Link} from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  \r\n  return (\r\n        \r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            {/* <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link> */}\r\n            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n{/*           \r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n          </li> */}\r\n          \r\n        </ul>\r\n{/* \r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n          <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form> */}\r\n      </div>\r\n\r\n      <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input class=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} id=\"flexSwitchCheckChecked\"/>\r\n        <label class=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Enable dark mode</label>\r\n      </div>\r\n    </nav>\r\n\r\n    )\r\n}\r\n\r\nNavbar.propTypes ={\r\n\r\n    title: PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps={\r\n\r\n  //  title:\"Im default\",\r\n    aboutText:\"Hello World\"\r\n};","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const [text,setText]=useState('');\r\n    const handleUpclick=()=>{\r\n        \r\n        let newtext=text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert('Text is capitalize','success');\r\n    }\r\n\r\n    const handleLowclick=()=>{\r\n        \r\n        let newtext=text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert('Text is LowerCase','success')\r\n    }\r\n    const handleclearclick=()=>{\r\n        \r\n        let newtext=\"\";\r\n        setText(newtext);\r\n    }\r\n    const handleCapitalclick=()=>{\r\n        \r\n        let newtext=\"\";\r\n         if(text[0] === text[0].toLowerCase() ){\r\n            \r\n            newtext +=text.charAt(0).toUpperCase();\r\n         }\r\n\r\n        for (let i = 1; i < text.length; i++) {\r\n            \r\n            \r\n            if(text[i-1]===\" \"){\r\n\r\n                newtext +=text.charAt(i).toUpperCase();\r\n            }\r\n\r\n            else{\r\n\r\n                newtext +=text[i];          \r\n            }\r\n          }\r\n        \r\n        setText(newtext);\r\n    }\r\n\r\n\r\n    const handleOnChane=(event)=>{\r\n\r\n        setText(event.target.value);\r\n    }\r\n\r\n    // text=\"new text\"; //wrong way\r\n    // setText(\"New text here\"); //correct way\r\n    return (\r\n\r\n    <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'black' }}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" id=\"myBox\" onChange={handleOnChane}  value={text} style={{backgroundColor: props.mode==='dark'?'grey':'white',\r\n            color: props.mode==='dark'?'white':'black' }}  rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpclick}>ConvertUpperLetter</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLowclick}>ConvertLowerLetter</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleclearclick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCapitalclick}>Capitalize</button>\r\n        </div>\r\n\r\n        <div className=\"container my-3\">\r\n            <h1>Text Summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.08 * text.split(\" \").length}miutes to read the text</p>\r\n            <h2>Prieview</h2>\r\n            <p>{text.length>0?text:\"Write some thing to prieview\"}</p>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const Capitalize=(word)=>{\r\n\r\n         word =word.charAt(0).toUpperCase() + word.slice(1);\r\n         return word;\r\n    }\r\n    return (\r\n      \r\n    props.alert &&<div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{Capitalize(props.alert.type)}</strong> :{props.alert.msg}     \r\n    </div>\r\n        \r\n    )\r\n}\r\n","// import About from './component/About';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport Alert from './component/Alert';\n// import logo from './logo.svg';\nimport React, { useState } from 'react'\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n\n  const showAlert=(message,type)=>{\n\n        setAlert({\n          msg:message,\n          type:type\n\n        })\n        \n        setTimeout(() => {\n          setAlert(null);\n        }, 1500);\n  }\n\n  const toggleMode=()=>{\n\n    if(mode===\"dark\"){\n\n      setMode(\"light\")\n      document.body.style.backgroundColor ='yellow';\n      showAlert('light Mode is enable','success')\n      document.title = 'Light Mode';\n\n      // setTimeout(() => {\n      //   document.title = 'Text is amazing';\n      // }, 2000);\n\n      // setTimeout(() => {\n      //   document.title = 'Install now';\n      // }, 1500);\n    }\n    else{\n      setMode(\"dark\")\n      document.body.style.backgroundColor ='green';\n      showAlert('dark Mode is enable','success')\n      document.title = 'Dark Mode';\n    }\n  }\n  return (\n\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Anas React\" aboutText=\"About React Js \" mode={mode} togglemode={toggleMode}/>\n      {/* <Navbar/> */}\n      <Alert alert={alert}/>\n\n      <div className=\"container my-3\">\n\n      {/* <Switch> */}\n\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n     \n          {/* <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text\" mode={mode}/>\n          {/* </Route> */}\n\n      {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}